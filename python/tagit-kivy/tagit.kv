<DarkButton@Button>:
  background_color: [238/255, 232/255, 213/255, 1]  # base2
  #background_color: solarized.Solarized.get_color(Solarized.BASE2, Solarized.DECIMAL)
  background_down: ''
  background_normal: ''
  bold: True
  color: [101/255, 123/255, 131/255, 1]  # base00
  font_name: 'Roboto'
  font_size: 50
  on_press: self.background_color = [253/255, 246/255, 227/255, 1]  # base3
  on_release: self.background_color = [238/255, 232/255, 213/255, 1]  # base2
  size_hint: (1, None)

<DarkLabel@Label>:
  bold: True
  color: [253/255, 246/255, 227/255, 1]
  font_name: 'Roboto'
  font_size: 50
  halign: 'right'
  padding_x: 20
  padding_y: dp(30)
  size_hint_x: None
  text_size: self.size
  valign: 'middle'
  width: 350

<EmptyLabel@Label>:
  bold: True
  color: [253/255, 246/255, 227/255, 1]  # base3
  font_name: 'Roboto'
  font_size: 50
  padding_y: dp(30)
  size_hint_x: None
  width: 30

<DarkTextInput@TextInput>:
  background_color: [253/255, 246/255, 227/255, 1] if self.focus else [238/255, 232/255, 213/255, 1]
  color: [101/255, 123/255, 131/255, 1]  # base00
  font_name: 'Roboto'
  font_size: 50
  multiline:  False
  padding_x: 20
  padding_y: [self.height / 2.0 - (self.line_height / 2.0) * len(self._lines), 0]
  size_y: 60
  size_hint: (1, None)

<DarkTextArea@TextInput>:
  background_color: [253/255, 246/255, 227/255, 1] if self.focus else [238/255, 232/255, 213/255, 1]
  color: [101/255, 123/255, 131/255, 1]  # base00
  font_name: 'Roboto'
  font_size: 50
  height: 150
  multiline:  True
  padding_x: 20
  size_hint: (1, None)

<Resizing_GridLayout@GridLayout>:
  cols: 1
  row_force_default: True
  spacing: 20
  foo: [self.rows_minimum.update({i: x.height}) for i, x in enumerate(reversed(list(self.children)))]

<ResizingRow_GridLayout@GridLayout>:
  cols: 1
  height: sum([c.height for c in self.children])
  padding_y: 10

<Root>:
  rows: 1
  canvas.before:
    Color:
      rgba: (0/255, 43/255, 54/255, 1)  # base03
    Rectangle:
      pos: self.pos
      size: self.size

  StackLayout:
    padding: 10
    spacing: 10
    size_hint: .12, 1

    DarkButton:
      id: button_open
      on_release: root.show_load()
      text: 'Open'

    DarkButton:
      id: button_spotify
      disabled: True
      on_release: root.get_spotify_data()
      text: 'Spotify'

    DarkButton:
      id: button_lyrics
      disabled: True
      on_release: root.get_lyrics()
      text: 'Lyrics'

    DarkButton:
      id: button_clear_tags
      disabled: True
      on_release: root.clear_tags()
      text: 'Clear Tags'

    DarkButton:
      id: button_save
      disabled: True
      on_release: root.save_tags()
      text: 'Save'

    DarkButton:
      text: 'Exit'
      on_release: self.background_color = [253/255, 246/255, 227/255, 1]  # base3
      on_release: app.stop()

  Resizing_GridLayout:
    ResizingRow_GridLayout:
      BoxLayout:
        DarkLabel:
          text: ''
        Label:
          id: label_filename
          bold: False
          color: [253/255, 246/255, 227/255, 1]  # base3
          font_name: 'Roboto'
          font_size: 45
          padding_y: dp(30)
          size_hint_x: 1
          text: ''

    ResizingRow_GridLayout:
      BoxLayout:
        DarkLabel:
          id: label_artist
          text: 'Artist'
        DarkTextInput:
          id: input_artist
          write_tab: False
          hint_text: 'Artist'
          on_text: root.on_change_input(self, root.ids.label_artist)
        EmptyLabel:
          text: ''

    ResizingRow_GridLayout:
      BoxLayout:
        DarkLabel:
          id: label_albumartist
          text: 'Album Artist'
        DarkTextInput:
          id: input_albumartist
          write_tab: False
          hint_text: 'Album Artist'
          on_text: root.on_change_input(self, root.ids.label_albumartist)
        EmptyLabel:
          text: ''

    ResizingRow_GridLayout:
      BoxLayout:
        DarkLabel:
          id: label_album
          text: 'Album'
        DarkTextInput:
          id: input_album
          write_tab: False
          hint_text: 'Album'
          on_text: root.on_change_input(self, root.ids.label_album)
        EmptyLabel:
          text: ''

    ResizingRow_GridLayout:
      BoxLayout:
        DarkLabel:
          id: label_title
          text: 'Title'
        DarkTextInput:
          id: input_title
          write_tab: False
          hint_text: 'Title'
          on_text: root.on_change_input(self, root.ids.label_title)
        EmptyLabel:
          text: ''

    ResizingRow_GridLayout:
      BoxLayout:
        DarkLabel:
          id: label_date
          text: 'Date'
        DarkTextInput:
          id: input_date
          write_tab: False
          hint_text: 'Date'
          on_text: root.on_change_input(self, root.ids.label_date)
        EmptyLabel:
          text: ''

    ResizingRow_GridLayout:
      BoxLayout:
        DarkLabel:
          id: label_genre
          text: 'Genre'
        DarkTextInput:
          id: input_genre
          write_tab: False
          hint_text: 'Genre'
          on_text: root.on_change_input(self, root.ids.label_genre)
        EmptyLabel:
          text: ''

    ResizingRow_GridLayout:
      row_force_default: True
      row_default_height: 150
      BoxLayout:
        DarkLabel:
          id: label_comment
          text: 'Comment'
        DarkTextArea:
          id: input_comment
          write_tab: False
          hint_text: 'Comment'
          on_text: root.on_change_input(self, root.ids.label_comment)
        EmptyLabel:
          text: ''

    ResizingRow_GridLayout:
      row_force_default: True
      row_default_height: 200
      BoxLayout:
        DarkLabel:
          id: label_lyrics
          size_hint_y: None
          height: 150
          text: 'Lyrics'
          on_text: root.on_change_input(self, root.ids.label_lyrics)
        #ScrollView:
        #  id: scrlv
        #  size_hint: (1, None)
        #  DarkTextArea:
        #    id: input_lyrics
        #    write_tab: False
        #    hint_text: 'Lyrics'
        #    size_hint: 1, None
        #    height: max( (len(self._lines)+1) * self.line_height, scrlv.height)
        #    on_text: self.height = max( (len(self._lines)+1) * self.line_height, scrlv.height)
        DarkTextArea:
          id: input_lyrics
          write_tab: False
          hint_text: 'Lyrics'
        EmptyLabel:
          text: ''

    ResizingRow_GridLayout:
      row_force_default: True
      row_default_height: 500
      BoxLayout:
        DarkLabel:
          id: label_album_art
          size_hint_y: None
          height: 400
          text: 'Album Art'
        AsyncImage:
          id: album_art
          fit_mode: 'contain'
          source: ''
          size_hint: (None, None)
          height: 400
          width: 400


<LoadDialog>:
  BoxLayout:
    size: root.size
    pos: root.pos
    orientation: 'vertical'
    FileChooserIconView:
      id: filechooser
      path: '/storage/emulated/0/Download/Music'

    BoxLayout:
      size_hint_y: None
      height: 30
      padding: 20
      spacing: 20

      DarkButton:
        text: 'Dismiss'
        on_release: root.cancel()

      DarkButton:
        text: 'Open'
        on_release: root.load(filechooser.path, filechooser.selection)
